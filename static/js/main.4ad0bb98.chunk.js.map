{"version":3,"sources":["services/index.js","components/Home.js","components/MovieDetail.js","App.js","index.js"],"names":["apiKey","url","nowPlayingUrl","topRatedUrl","movieUrl","genreUrl","moviesUrl","personUrl","getMovies","a","axios","get","params","api_key","language","page","res","data","imagesUrl","movies","results","map","movie","id","backPoster","popularity","title","poster","overview","rating","console","log","getGenres","genres","getMoviesByGenre","genre_id","with_genres","moviesByGenre","getPersons","persons","person","profileImg","name","known","getMoviesTopRated","moviesTopRated","getMovieDetail","getMovieVideos","getCasts","casts","cast","cast_id","character","img","profile_path","getSimilarMovies","Home","useState","nowPlaying","setNowPlaying","setGenres","setMoviesByGenre","setPersons","topRated","setTopRated","useEffect","fetchApi","handleClickGenre","genreId","renderMoviesSlider","slice","i","style","height","width","key","className","src","alt","fontSize","color","cursor","textAlign","renderGenres","genre","type","onClick","renderMoviesByGenre","to","count","size","renderTrendingPersons","renderMoviesTopRated","autoplay","pauseOnVisibility","slideshowSpeed","version","indicators","MovieDetail","match","detail","setDetail","open","setOpen","video","setVideo","setCasts","similar","setSimilar","MoviePlayerModal","Modal","show","onHide","aria-labelledby","centered","Header","closeButton","Title","fontWeight","Body","background","playing","undefined","renderCasts","renderSimilar","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4ad0bb98.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst apiKey='d8792ad8e2f663b6c2aad88e135c8e81'\r\nconst url='https://api.themoviedb.org/3'\r\nconst nowPlayingUrl=`${url}/movie/now_playing`\r\nconst topRatedUrl=`${url}/movie/top_rated`\r\nconst movieUrl=`${url}/movie`\r\nconst genreUrl=`${url}/genre/movie/list`\r\nconst moviesUrl=`${url}/discover/movie`\r\nconst personUrl=`${url}/trending/person/week`\r\n\r\nexport const getMovies=async()=>{\r\n    try {\r\n       const res = await axios.get(nowPlayingUrl,{\r\n           params:{\r\n               api_key:apiKey,\r\n               language:'en_US',\r\n               page:1\r\n           }\r\n       })\r\n       const data=res.data\r\n\r\n       const imagesUrl='https://image.tmdb.org/t/p/original/'\r\n       const movies=data.results.map((movie)=>{\r\n           return {\r\n            id:movie['id'],\r\n            backPoster:imagesUrl + movie['backdrop_path'],\r\n            popularity:movie['popularity'],\r\n            title:movie['title'],\r\n            poster:imagesUrl + movie['poster_path'],\r\n            overview:movie['overview'],\r\n            rating:movie['vote_average'],\r\n           }\r\n       })\r\n\r\n       return movies\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const getGenres=async()=>{\r\n    try {\r\n       const res = await axios.get(genreUrl,{\r\n           params:{\r\n               api_key:apiKey,\r\n               language:'en_US',\r\n               page:1\r\n           }\r\n       })\r\n       const data=res.data\r\n       const genres=data.genres\r\n       return genres\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\nexport const getMoviesByGenre=async(genre_id)=>{\r\n    try {\r\n        const res = await axios.get(moviesUrl,{\r\n            params:{\r\n                api_key:apiKey,\r\n                language:'en_US',\r\n                page:1,\r\n                with_genres:genre_id\r\n            }\r\n        })\r\n        const data=res.data\r\n        const imagesUrl='https://image.tmdb.org/t/p/original/'\r\n       const moviesByGenre=data.results.map((movie)=>{\r\n           return {\r\n            id:movie['id'],\r\n            backPoster:imagesUrl + movie['backdrop_path'],\r\n            popularity:movie['popularity'],\r\n            title:movie['title'],\r\n            poster:imagesUrl + movie['poster_path'],\r\n            overview:movie['overview'],\r\n            rating:movie['vote_average'],\r\n           }\r\n       })\r\n       return moviesByGenre\r\n     } catch (error) {\r\n         console.log(error)\r\n     }\r\n}\r\n\r\nexport const getPersons=async()=>{\r\n    try {\r\n        const res = await axios.get(personUrl,{\r\n            params:{\r\n                api_key:apiKey\r\n            }\r\n        })\r\n        const data=res.data\r\n        const persons=data.results.map(person=> {\r\n            return {\r\n                id:person['id'],\r\n                profileImg:'https://image.tmdb.org/t/p/w200' + person['profile_path'],\r\n                popularity:person['popularity'],\r\n                name:person['name'],\r\n                known:person['known_for_department']\r\n            }\r\n        })\r\n        return persons\r\n     } catch (error) {\r\n         console.log(error)\r\n     }\r\n}\r\n\r\nexport const getMoviesTopRated=async()=>{\r\n    try {\r\n        const res = await axios.get(topRatedUrl,{\r\n            params:{\r\n                api_key:apiKey,\r\n                language:'en_US',\r\n                page:1,\r\n            }\r\n        })\r\n        const data=res.data\r\n        const imagesUrl='https://image.tmdb.org/t/p/original/'\r\n       const moviesTopRated=data.results.map((movie)=>{\r\n           return {\r\n            id:movie['id'],\r\n            backPoster:imagesUrl + movie['backdrop_path'],\r\n            popularity:movie['popularity'],\r\n            title:movie['title'],\r\n            poster:imagesUrl + movie['poster_path'],\r\n            overview:movie['overview'],\r\n            rating:movie['vote_average'],\r\n           }\r\n       })\r\n       return moviesTopRated\r\n     } catch (error) {\r\n         console.log(error)\r\n     }\r\n}\r\n\r\nexport const getMovieDetail=async(id)=>{\r\n    try {\r\n        const res = await axios.get(`${movieUrl}/${id}`,{\r\n            params:{\r\n                api_key:apiKey,\r\n                language:'en_US',\r\n            }\r\n        })\r\n        const data=res.data\r\n        const imagesUrl='https://image.tmdb.org/t/p/original/'\r\n       const movie={\r\n            id:data.id,\r\n            backPoster:imagesUrl + data['backdrop_path'],\r\n            popularity:data['popularity'],\r\n            title:data['title'],\r\n            poster:imagesUrl + data['poster_path'],\r\n            overview:data['overview'],\r\n            rating:data['vote_average'],\r\n            genres:data.genres\r\n           }\r\n       \r\n       return movie\r\n     } catch (error) {\r\n         console.log(error)\r\n     }\r\n}\r\n\r\nexport const getMovieVideos=async(id)=>{\r\n    try {\r\n        const res = await axios.get(`${movieUrl}/${id}/videos`,{\r\n            params:{\r\n                api_key:apiKey,\r\n                language:'en_US',\r\n            }\r\n        })\r\n        return res.data.results[0]\r\n     } catch (error) {\r\n         console.log(error)\r\n     }\r\n}\r\n\r\nexport const getCasts=async(id)=>{\r\n    try {\r\n        const res = await axios.get(`${movieUrl}/${id}/casts`,{\r\n            params:{\r\n                api_key:apiKey,\r\n                language:'en_US',\r\n            }\r\n        })\r\n        const imagesUrl='https://image.tmdb.org/t/p/w200'\r\n        const casts=res.data.cast.map(cast=>{\r\n           return { id:cast.cast_id,\r\n                    character:cast.character,\r\n                    name:cast.name,\r\n                    img:imagesUrl+cast.profile_path,    \r\n            }\r\n        })\r\n        return casts\r\n     } catch (error) {\r\n         console.log(error)\r\n     }\r\n}\r\n\r\nexport const getSimilarMovies=async(id)=>{\r\n    try {\r\n        const res = await axios.get(`${movieUrl}/${id}/similar`,{\r\n            params:{\r\n                api_key:apiKey,\r\n                language:'en_US',\r\n                page:1\r\n            }\r\n        })\r\n        const data=res.data\r\n        const imagesUrl='https://image.tmdb.org/t/p/original/'\r\n           const movies=data.results.map((movie)=>{\r\n            return {\r\n             id:movie['id'],\r\n             backPoster:imagesUrl + movie['backdrop_path'],\r\n             popularity:movie['popularity'],\r\n             title:movie['title'],\r\n             poster:imagesUrl + movie['poster_path'],\r\n             overview:movie['overview'],\r\n             rating:movie['vote_average'],\r\n            }\r\n        })\r\n       return movies\r\n     } catch (error) {\r\n         console.log(error)\r\n     }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport RBCarousel from \"react-bootstrap-carousel\";\r\nimport {\r\n  getMovies,\r\n  getGenres,\r\n  getMoviesByGenre,\r\n  getPersons,\r\n  getMoviesTopRated,\r\n} from \"../services/index\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\n\r\nconst Home = () => {\r\n  const [nowPlaying, setNowPlaying] = useState([]);\r\n  const [genres, setGenres] = useState([]);\r\n  const [moviesByGenre, setMoviesByGenre] = useState([]);\r\n  const [persons, setPersons] = useState([]);\r\n  const [topRated, setTopRated] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n      setNowPlaying(await getMovies());\r\n      setGenres(await getGenres());\r\n      setMoviesByGenre(await getMoviesByGenre(37));\r\n      setPersons(await getPersons());\r\n      setTopRated(await getMoviesTopRated());\r\n    };\r\n    fetchApi();\r\n  }, []);\r\n\r\n\r\nconst handleClickGenre=async (genreId)=>{\r\n  setMoviesByGenre(await getMoviesByGenre(genreId))\r\n}\r\n\r\n  \r\n\r\n  const renderMoviesSlider = nowPlaying.slice(0, 5).map((movie, i) => {\r\n    return (\r\n      <div style={{ height: 500, width: \"100%\" }} key={i}>\r\n        <div className=\"carousel-center\">\r\n          <img\r\n            style={{ height: 600 }}\r\n            src={movie.backPoster}\r\n            alt={movie.title}\r\n          />\r\n        </div>\r\n        <div className=\"carousel-center\">\r\n          <i\r\n            className=\"far fa-play-circle\"\r\n            style={{ fontSize: 95, color: \"#f4c10f\",cursor:\"pointer\"}}\r\n          ></i>\r\n        </div>\r\n        <div\r\n          className=\"carousel-caption\"\r\n          style={{ textAlign: \"center\", fontSize: 35 }}\r\n        >\r\n          {movie.title}\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n  const renderGenres = genres.map((genre, i) => {\r\n    return (\r\n      <li className=\"list-inline-item \" key={i}>\r\n        <button type=\"button\" className=\"btn btn-outline-info\" onClick={()=>handleClickGenre(genre.id)}>\r\n          {genre.name}\r\n        </button>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  const renderMoviesByGenre = moviesByGenre.slice(0, 4).map((movie) => {\r\n    return (\r\n      <div className=\"col-md-3 col-sm-6\" key={movie.id}>\r\n        <div className=\"card\">\r\n          <Link to={`/movie/${movie.id}`}>\r\n            <img src={movie.poster} alt={movie.title} className=\"img-fluid\" />\r\n          </Link>\r\n        </div>\r\n        <div className=\"mt-3\">\r\n          <p>{movie.title}</p>\r\n          <p>Rated: {movie.rating}</p>\r\n          <ReactStars\r\n            count={movie.rating}\r\n            size={20}\r\n            color=\"#f4c10f\"\r\n          ></ReactStars>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const renderTrendingPersons = persons.slice(0, 4).map((person, i) => {\r\n    return (\r\n      <div className=\"col-md-3 text-center\" key={i}>\r\n        <img\r\n          src={person.profileImg}\r\n          alt={person.name}\r\n          className=\"img-fluid rounded-circle mx-auto d-block\"\r\n        />\r\n        <p className=\"font-weight-bold text-center\">{person.name}</p>\r\n        <p\r\n          className=\"font-weight-light text-center\"\r\n          style={{ color: \"#5a606b\" }}\r\n        >\r\n          Trending for {person.known}\r\n        </p>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const renderMoviesTopRated = topRated.slice(0, 4).map((movie) => {\r\n    return (\r\n      <div className=\"col-md-3\" key={movie.id}>\r\n        <div className=\"card\">\r\n          <Link to={`/movie/${movie.id}`}>\r\n            <img src={movie.poster} alt={movie.title} className=\"img-fluid\" />\r\n          </Link>\r\n        </div>\r\n        <div className=\"mt-3\">\r\n          <p>{movie.title}</p>\r\n          <p>Rated: {movie.rating}</p>\r\n          <ReactStars\r\n            count={movie.rating}\r\n            size={25}\r\n            color=\"#f4c10f\"\r\n          ></ReactStars>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className=\"row mt-2\">\r\n          <div className=\"col \">\r\n            <RBCarousel\r\n              autoplay={true}\r\n              pauseOnVisibility={false}\r\n              slideshowSpeed={2000}\r\n              version={4}\r\n              indicators={true}\r\n            >\r\n              {renderMoviesSlider}\r\n            </RBCarousel>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mt-3\">\r\n          <div className=\"col\">\r\n            <div className=\"list-inline\">{renderGenres}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mt-3\">\r\n          <div className=\"col\">\r\n            <div className=\"float-right\">\r\n              <i className=\"far fa-arrow-alt-circle-right\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mt-3\">{renderMoviesByGenre}</div>\r\n\r\n        <div className=\"row mt-3\">\r\n          <p className=\"font-weight-bold\" style={{ color: \"#5a606b\" }}>\r\n            TRENDING PERSON ON THIS WEEK\r\n          </p>\r\n        </div>\r\n        <div className=\"row mt-3\">\r\n          <div className=\"col\">\r\n            <div className=\"float-right\">\r\n              <i className=\"far fa-arrow-alt-circle-right\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mt-3\">{renderTrendingPersons}</div>\r\n        <div className=\"row mt-3\">\r\n          <div className=\"col\">\r\n            <p className=\"font-weight-bold\" style={{ color: \"#5a606b\" }}>\r\n              TOP RATED MOVIES\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mt-3\">\r\n          <div className=\"col\">\r\n            <div className=\"float-right\">\r\n              <i className=\"far fa-arrow-alt-circle-right\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mt-3\">{renderMoviesTopRated}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getMovieDetail, getMovieVideos,getCasts,getSimilarMovies } from \"../services/index\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport ReactPlayer from \"react-player\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MovieDetail = ({ match }) => {\r\n  const [detail, setDetail] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [video, setVideo] = useState(\"\");\r\n  const [casts, setCasts] = useState([]);\r\n  const [similar, setSimilar] = useState([]);\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n      setDetail(await getMovieDetail(match.params.id));\r\n      setVideo(await getMovieVideos(match.params.id));\r\n      setCasts(await getCasts(match.params.id));\r\n      setSimilar(await getSimilarMovies(match.params.id));\r\n    };\r\n    fetchApi();\r\n  }, [match.params.id]);\r\n\r\n  const MoviePlayerModal = () => {\r\n    const youtubeENDPOINT = \"https://www.youtube.com/watch?v=\";\r\n    return (\r\n      <Modal\r\n        show={open}\r\n        onHide={() => setOpen(false)}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title\r\n            id=\"contained-modal-title-vcenter\"\r\n            style={{ color: \"#000\", fontWeight: \"bolder\" }}\r\n          >\r\n            {detail.title}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body style={{ background: \"#000\" }}>\r\n          <ReactPlayer\r\n            className=\"container-fluid\"\r\n            url={youtubeENDPOINT + video.key}\r\n            playing\r\n            width=\"100%\"\r\n          ></ReactPlayer>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  let renderGenres;\r\n\r\n  if (detail.genres !== undefined) {\r\n    renderGenres = detail.genres.map((genre) => {\r\n      return (\r\n        <li className=\"list-inline-item\" key={genre.id}>\r\n          <button type=\"button\" className=\"btn btn-outline-info\">\r\n            {genre.name}\r\n          </button>\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n\r\n  const renderCasts=casts.slice(0,4).map((cast)=>{\r\n      return(\r\n        <div className=\"col-md-3 text-center\" key={cast.id}>\r\n        <img\r\n          src={cast.img}\r\n          alt={cast.name}\r\n          className=\"img-fluid rounded-circle mx-auto d-block\"\r\n        />\r\n        <p className=\"font-weight-bold text-center\">{cast.name}</p>\r\n        <p\r\n          className=\"font-weight-light text-center\"\r\n          style={{ color: \"#5a606b\" }}\r\n        >\r\n         {cast.character}\r\n        </p>\r\n      </div>\r\n      )\r\n  })\r\n\r\nconst renderSimilar=similar.slice(0,4).map((movie)=>{\r\n    return(\r\n        <div className=\"col-md-3 col-sm-6\" key={movie.id}>\r\n        <div className=\"card\">\r\n          <Link to={`/movie/${movie.id}`}>\r\n            <img src={movie.poster} alt={movie.title} className=\"img-fluid\" />\r\n          </Link>\r\n        </div>\r\n        <div className=\"mt-3\">\r\n          <p>{movie.title}</p>\r\n          <p>Rated: {movie.rating}</p>\r\n          <ReactStars\r\n            count={movie.rating}\r\n            size={20}\r\n            color=\"#f4c10f\"\r\n          ></ReactStars>\r\n        </div>\r\n      </div>\r\n    )\r\n}) \r\n\r\n  return detail ? (\r\n    <div className=\"container\">\r\n      <div className=\"row mt-2\">\r\n        <MoviePlayerModal></MoviePlayerModal>\r\n        <div className=\"col text-center\" style={{ width: \"100%\" }}>\r\n          <img\r\n            src={detail.backPoster}\r\n            alt={detail.title}\r\n            className=\"img-fluid\"\r\n          />\r\n\r\n          <div className=\"carousel-center\">\r\n            <i\r\n              className=\"far fa-play-circle\"\r\n              onClick={() => setOpen(true)}\r\n              style={{ fontSize: 95, color: \"#f4c10f\", cursor: \"pointer\" }}\r\n            ></i>\r\n          </div>\r\n          <div\r\n            className=\"carousel-caption\"\r\n            style={{ textAlign: \"center\", fontSize: 35 }}\r\n          >\r\n            {detail.title}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mt-3\">\r\n        <div className=\"col\">\r\n          <ul className=\"list-inline\">{renderGenres}</ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mt-3\">\r\n        <div className=\"col\">\r\n          <div className=\"text-center\">\r\n            <ReactStars\r\n              count={detail.rating}\r\n              size={20}\r\n              color=\"#f4c10f\"\r\n            ></ReactStars>\r\n          </div>\r\n          <div className=\"mt-3\">\r\n            <p style={{ color: \"#5a606b\", fontWeight: \"bold\" }}>\r\n              OVERVIEW\r\n            </p>\r\n              {detail.overview}\r\n          </div>\r\n          <div className=\"mt-3\">\r\n            <p style={{ color: \"#5a606b\", fontWeight: \"bold\" }}>\r\n              CASTS\r\n            </p>\r\n            <div className=\"row\">\r\n              {renderCasts}\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-3\">\r\n            <p style={{ color: \"#5a606b\", fontWeight: \"bold\" }}>\r\n              SIMILAR MOVIES\r\n            </p>\r\n            <div className=\"row\">\r\n              {renderSimilar}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default MovieDetail;\r\n","import React from 'react';\nimport {Switch, Route} from 'react-router-dom'\nimport './App.css';\nimport Home from './components/Home'\nimport MovieDetail from './components/MovieDetail'\n\nfunction App() {\n  \n  return (\n    <main>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/movie/:id\" component={MovieDetail} />\n      </Switch>\n    </main>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\"\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}